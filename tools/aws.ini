[default]
aws_key=*
aws_secret=*
aws_region=eu-west-1

[sql]
tmp_clientid=50455
tmp_table=kpi
create_table_humpback=CREATE EXTERNAL TABLE IF NOT EXISTS insights.humpback (
    `sessionid` string,
    `clientid` string,
    `email` string,
    `firstname` string,
    `lastname` string,
    `name` string,
    `ipaddress` string,
    `rcttag` string,
    `phone` string,
    `browser` string,
    `language` string,
    `optoutstatus` int,
    `orderstatus` int,
    `currency` string,
    `cartvalue` double,
    `status` string,
    `splitab` string,
    `date_start` timestamp,
    `date_updated` timestamp,
    `date_completed` timestamp,
    `sessiontime` int,
    `sessioncompletion` int,
    `productvalue` double,
    `productquantity` int,
    `eopen` string,
    `eclose` string,
    `productid` string,
    `sid` string,
    `browserdesc` string

    ) PARTITIONED BY (
    year string,
    month string
    )
    ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
    WITH SERDEPROPERTIES (
     'serialization.format' = ',',
     'field.delim' = ','
    ) LOCATION 's3://whale.recheckit.com/humpback/'
    TBLPROPERTIES ('has_encrypted_data'='false');
add_partition_humpback=ALTER TABLE humpback ADD
    PARTITION (year='2018',month='1') location 's3://whale.recheckit.com/humpback/2018/01/'
    PARTITION (year='2018',month='2') location 's3://whale.recheckit.com/humpback/2018/02/'
    PARTITION (year='2018',month='3') location 's3://whale.recheckit.com/humpback/2018/03/'
    PARTITION (year='2018',month='4') location 's3://whale.recheckit.com/humpback/2018/04/'
    PARTITION (year='2018',month='5') location 's3://whale.recheckit.com/humpback/2018/05/'
    PARTITION (year='2018',month='6') location 's3://whale.recheckit.com/humpback/2018/06/'
    PARTITION (year='2018',month='7') location 's3://whale.recheckit.com/humpback/2018/07/'
    PARTITION (year='2018',month='8') location 's3://whale.recheckit.com/humpback/2018/08/'
    PARTITION (year='2018',month='9') location 's3://whale.recheckit.com/humpback/2018/09/'
    PARTITION (year='2018',month='10') location 's3://whale.recheckit.com/humpback/2018/10/'
    PARTITION (year='2018',month='11') location 's3://whale.recheckit.com/humpback/2018/11/'
    PARTITION (year='2018',month='12') location 's3://whale.recheckit.com/humpback/2018/12/';
delete_partition_humpback=ALTER TABLE humpback DROP PARTITION (year='2018',month='2');
create_table_crab=CREATE EXTERNAL TABLE IF NOT EXISTS insights.crab (
  `id` string,
  `json_date_time` timestamp,
  `delta` int,
  `url` string,
  `val` string,
  `cur` string,
  `v` string,
  `clientid` string,
  `sid` string,
  `email` string,
  `first_name` string,
  `last_name` string,
  `phone` string,
  `address_1` string,
  `address_2` string,
  `city` string,
  `zip` string,
  `country` string,
  `product_id` string,
  `product_name` string,
  `product_page` string,
  `product_image` string,
  `product_quantity` int,
  `product_value` double,
  `ab` string,
  `o` string,
  `c` string,
  `oct` string
  ) PARTITIONED BY (
  year string,
  month string
  )
  ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
  WITH SERDEPROPERTIES (
  'serialization.format' = ',',
  'field.delim' = ','
  ) LOCATION 's3://whale.recheckit.com/crab/'
  TBLPROPERTIES ('has_encrypted_data'='false');
create_table_crab_dev=CREATE EXTERNAL TABLE IF NOT EXISTS insights.crab_dev (
  `id` string,
  `json_date_time` timestamp,
  `delta` int,
  `url` string,
  `val` string,
  `cur` string,
  `v` string,
  `clientid` string,
  `sid` string,
  `email` string,
  `first_name` string,
  `last_name` string,
  `phone` string,
  `address_1` string,
  `address_2` string,
  `city` string,
  `zip` string,
  `country` string,
  `product_id` string,
  `product_name` string,
  `product_page` string,
  `product_image` string,
  `product_quantity` int,
  `product_value` double,
  `ab` string,
  `o` string,
  `c` string,
  `oct` string
  ) PARTITIONED BY (
  year string,
  month string
  )
  ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
  WITH SERDEPROPERTIES (
  'serialization.format' = ',',
  'field.delim' = ','
  ) LOCATION 's3://bigdatatest.recheckit.com/crabtests/'
  TBLPROPERTIES ('has_encrypted_data'='false');
add_partition_crab_dev=ALTER TABLE crab_dev ADD
    PARTITION (year='2017',month='1') location 's3://bigdatatest.recheckit.com/crabtests/2017/1/'
    PARTITION (year='2017',month='2') location 's3://bigdatatest.recheckit.com/crabtests/2017/2/'
    PARTITION (year='2017',month='3') location 's3://bigdatatest.recheckit.com/crabtests/2017/3/'
    PARTITION (year='2017',month='4') location 's3://bigdatatest.recheckit.com/crabtests/2017/5/'
    PARTITION (year='2017',month='5') location 's3://bigdatatest.recheckit.com/crabtests/2017/5/'
    PARTITION (year='2017',month='6') location 's3://bigdatatest.recheckit.com/crabtests/2017/6/'
    PARTITION (year='2017',month='7') location 's3://bigdatatest.recheckit.com/crabtests/2017/7/'
    PARTITION (year='2017',month='8') location 's3://bigdatatest.recheckit.com/crabtests/2017/8/'
    PARTITION (year='2017',month='9') location 's3://bigdatatest.recheckit.com/crabtests/2017/9/'
    PARTITION (year='2017',month='10') location 's3://bigdatatest.recheckit.com/crabtests/2017/10/'
    PARTITION (year='2017',month='11') location 's3://bigdatatest.recheckit.com/crabtests/2017/11/'
    PARTITION (year='2017',month='12') location 's3://bigdatatest.recheckit.com/crabtests/2017/12/'
    PARTITION (year='2018',month='1') location 's3://bigdatatest.recheckit.com/crabtests/2018/1/'
    PARTITION (year='2018',month='1') location 's3://bigdatatest.recheckit.com/crabtests/2018/2/'
    PARTITION (year='2018',month='1') location 's3://bigdatatest.recheckit.com/crabtests/2018/3/'
    PARTITION (year='2018',month='1') location 's3://bigdatatest.recheckit.com/crabtests/2018/4/'
    PARTITION (year='2018',month='1') location 's3://bigdatatest.recheckit.com/crabtests/2018/5/'
    PARTITION (year='2018',month='1') location 's3://bigdatatest.recheckit.com/crabtests/2018/6/'
    PARTITION (year='2018',month='1') location 's3://bigdatatest.recheckit.com/crabtests/2018/7/'
    PARTITION (year='2018',month='1') location 's3://bigdatatest.recheckit.com/crabtests/2018/8/'
    PARTITION (year='2018',month='1') location 's3://bigdatatest.recheckit.com/crabtests/2018/9/'
    PARTITION (year='2018',month='1') location 's3://bigdatatest.recheckit.com/crabtests/2018/10/'
    PARTITION (year='2018',month='1') location 's3://bigdatatest.recheckit.com/crabtests/2018/11/'
    PARTITION (year='2018',month='1') location 's3://bigdatatest.recheckit.com/crabtests/2018/12/';
add_partition_crab=ALTER TABLE crab ADD
    PARTITION (year='2018',month='1') location 's3://whale.recheckit.com/crab/2018/1/'
    PARTITION (year='2018',month='2') location 's3://whale.recheckit.com/crab/2018/2/'
    PARTITION (year='2018',month='3') location 's3://whale.recheckit.com/crab/2018/3/'
    PARTITION (year='2018',month='4') location 's3://whale.recheckit.com/crab/2018/5/'
    PARTITION (year='2018',month='5') location 's3://whale.recheckit.com/crab/2018/5/'
    PARTITION (year='2018',month='6') location 's3://whale.recheckit.com/crab/2018/6/'
    PARTITION (year='2018',month='7') location 's3://whale.recheckit.com/crab/2018/7/'
    PARTITION (year='2018',month='8') location 's3://whale.recheckit.com/crab/2018/8/'
    PARTITION (year='2018',month='9') location 's3://whale.recheckit.com/crab/2018/9/'
    PARTITION (year='2018',month='10') location 's3://whale.recheckit.com/crab/2018/10/'
    PARTITION (year='2018',month='11') location 's3://whale.recheckit.com/crab/2018/11/'
    PARTITION (year='2018',month='12') location 's3://whale.recheckit.com/crab/2018/12/';
delete_partition_crab=ALTER TABLE crab DROP PARTITION (year='2017',month='12');
add_partition_whale=ALTER TABLE whale ADD PARTITION (dt='2018-02-16')
    location 's3://bigdatatest.recheckit.com/datapipeline/2018-02-16/';
delete_partition_whale=ALTER TABLE whale DROP PARTITION (dt='2018-01-11');
add_partition_crabtestsymd=ALTER TABLE crabtestsymd ADD PARTITION (year='2018',month='1',day='8')
    location 's3://bigdatatest.recheckit.com/crabtests/2018/1/8/';
delete_partition_crabtestsymd=ALTER TABLE crabtestsymd DROP PARTITION (year='2017',month='12',day='1');
hourly_trafic_7days=SELECT clientid, currency,
    count(*) CountOfAllInteractions,
    count(distinct sessionid) CountOfSessions,
    date_format(date_start, '%H') as Hour,
    SUM(IF(status IN ('OS', 'OJ', 'OO'),1,0)) CountOfDirectSales,
    SUM(IF(status IN ('AS', 'AJ', 'AO'),1,0)) CountOfAbandonments,
    SUM(IF(status IN ('QS', 'QJ', 'QO'),1,0)) CountOfOnsiteRecoveries,
    SUM(IF(status IN ('RS', 'RJ', 'RO'),1,0)) CountOfEmails
    FROM insights.whale
    WHERE date_diff('day', date_start, current_timestamp) <= 7
    GROUP BY clientid, currency, substr(status, 1, 1), date_format(date_start, '%H')
    ORDER BY clientid, currency, substr(status, 1, 1), Hour;
avg_json_per_minute_with_status=SELECT
    c.clientid,
    c.sid,
    substr(c.sid, 14, 5) AS browserid,
    round(truncate(max(c.delta))/60, 2) AS maxdelta,
    count(c.sid) AS CountOfJsons,
    COALESCE(TRY(round(count(c.sid)/round(truncate(max(c.delta))/60, 2), 2)), 0) as AvgNrOfJSONsPerMinute,
    substr(status, 1, 1) as status
    FROM crab c, whale w
    WHERE c.sid = w.sid
    AND   length(c.clientid) > 4
    AND   c.delta > 0
    AND   c.clientid <> 'null_'
    AND   c.json_date_time is not null
    AND   c.clientid in ('tmp_clientid')
    AND   w.status IN ('OS', 'OJ', 'OO', 'AS', 'AJ', 'AO', 'QS', 'QJ', 'QO', 'RS', 'RJ', 'RO')
    GROUP BY c.clientid, c.sid, w.status
    ORDER BY c.clientid, c.sid, w.status;
weekdaily_yqm_status=SELECT clientid, currency,
    status as detailed_status,
    substr(status, 1, 1) as status,
    count(distinct sessionid) CountOfSessions,
    date_format(date_start, '%Y') as Year,
    quarter(date_start) as Quarter,
    date_format(date_start, '%Y-%m') as Month,
    date_format(date_start, '%b') as AbrMonth,
    date_format(date_start, '%M') as FullMonth,
    date_format(date_start, '%W') as Weekday,
    date_format(date_start, '%a') as AbrWeekday,
    ROUND(AVG( DISTINCT IF(date_diff('second', date_start,date_updated) > 0, date_diff('second', date_start,date_updated), 0))) AvgSessionTime,
    ROUND(MIN( DISTINCT IF(date_diff('second', date_start,date_updated) > 0, date_diff('second', date_start,date_updated), 0))) MinSessionTime,
    ROUND(MAX( DISTINCT IF(date_diff('second', date_start,date_updated) > 0, date_diff('second', date_start,date_updated), 0))) MaxSessionTime
    FROM whale
    WHERE
    date_diff('second', date_start,date_updated)  <= 25000
    AND status IN ('OS', 'OJ', 'OO', 'AS', 'AJ', 'AO', 'QS', 'QJ', 'QO', 'RS', 'RJ', 'RO')
    AND length(productid) > 0
    GROUP BY clientid, currency, status, date_format(date_start, '%Y'), quarter(date_start), date_format(date_start, '%Y-%m'),
    date_format(date_start, '%b'), date_format(date_start, '%M'), date_format(date_start, '%W'), date_format(date_start, '%a')
    ORDER BY clientid, currency, status, Year, Quarter, Month, Weekday;
extreme_sessiontimes=SELECT clientid, status, COUNT(DISTINCT sessionid) NrOfsessions,
    COUNT(DISTINCT CASE WHEN date_diff('second', date_start,date_updated) >= 60000000 THEN sessionid END) long_count,
    COUNT(DISTINCT CASE WHEN date_diff('second', date_start,date_updated) between 1000001 and 60000000 THEN sessionid END) tendays,
    COUNT(DISTINCT CASE WHEN date_diff('second', date_start,date_updated) between 450001 and 1000000  THEN sessionid END) fewdays,
    COUNT(DISTINCT CASE WHEN date_diff('second', date_start,date_updated)  between 50001 and 450000 THEN sessionid END) hours,
	COUNT(DISTINCT CASE WHEN date_diff('second', date_start,date_updated)  between 25001 and 50000 THEN sessionid END) _25_50000_sec,
	COUNT(DISTINCT CASE WHEN date_diff('second', date_start,date_updated)  <= 25000 THEN sessionid END) valid
    FROM whale
    GROUP BY clientid, status
    order by clientid, status;
weekdaily_month=SELECT clientid, currency,
    count(*) CountOfAllInteractions,
    count(distinct sessionid) CountOfSessions,
    date_format(date_start, '%Y') as Year,
    date_format(date_start, '%Y-%m') as Month,
    date_format(date_start, '%W') as Weekday,
    SUM(IF(status IN ('OS', 'OJ', 'OO'),1,0)) CountOfDirectSales,
    ROUND(SUM(DISTINCT IF(status IN ('OS', 'OJ', 'OO'), cartvalue, 0))) ValueOfDirectSales,
    ROUND(AVG(DISTINCT IF(status IN ('OS', 'OJ', 'OO'), cartvalue, 0))) AvgOfDirectSales,
    SUM(IF(status IN ('AS', 'AJ', 'AO'),1,0)) CountOfAbandonments,
    ROUND(SUM( DISTINCT IF(status IN ('AS', 'AJ', 'AO'), cartvalue, 0))) ValueOfAbandonments,
    ROUND(AVG( DISTINCT IF(status IN ('AS', 'AJ', 'AO'), cartvalue, 0))) AvgOfAbandonments,
    SUM(IF(status IN ('QS', 'QJ', 'QO'),1,0)) CountOfOnsiteRecoveries,
    ROUND(SUM(DISTINCT IF(status IN ('QS', 'QJ', 'QO'), cartvalue, 0))) ValueOfOnsiteRecoveries,
    ROUND(AVG(DISTINCT IF(status IN ('QS', 'QJ', 'QO'), cartvalue, 0))) AvgOfOnsiteRecoveries,
    SUM(IF(length(eOpen) > 0 OR length(eClose) > 0,1,0)) CountOfOpen,
    SUM(IF(length(eClose) > 0,1,0)) CountOfClose,
    SUM(IF(eClose != 'btnCloseClicked' AND eClose != 'closeOverlayViaBackground' ,1,0)) CountOfPositiveClose,
    SUM(IF(eClose = 'btnCloseClicked' OR eClose = 'closeOverlayViaBackground' ,1,0)) CountOfNegativeClose,
    SUM(IF(length(eOpen) > 0 AND length(eClose) = 0,1,0)) CountOfMissingClose
    FROM whale
    GROUP BY clientid, Currency, date_format(date_start, '%Y'), date_format(date_start, '%Y-%m'),date_format(date_start, '%W')
    ORDER BY clientid, Currency, Year, Month, Weekday;
avg_json_per_minute=SELECT clientid, sid, substr(sid, 14, 5) AS browserid,
    round(truncate(max(delta))/60, 2) AS maxdelta,
    count(sid) AS CountOfJsons,
    COALESCE(TRY(round(count(sid)/round(truncate(max(delta))/60, 2), 2)), 0) as AvgNrOfJSONsPerMinute
    FROM crab
    WHERE length(clientid) > 4
    AND   delta > 0
    AND   delta is not null
    AND   clientid <> 'null_'
    AND   json_date_time is not null
    AND   clientid in ('tmp_clientid')
    GROUP BY clientid, sid
    ORDER BY clientid, sid;
kpi=WITH
    rfm_sid AS
    (
      SELECT
         clientid,
         count(*) CountOfAllInteractions,
         count(distinct sid) CountOfSessions,
         sid,
         currency,
         sum(DISTINCT IF(status IN ('OS', 'OJ', 'OO', 'QS', 'QJ', 'QO', 'RS', 'RJ', 'RO'),1,0)) CountOfSales,
         sum(DISTINCT IF(status IN ('OS', 'OJ', 'OO', 'QS', 'QJ', 'QO', 'RS', 'RJ', 'RO'), cartvalue, 0)) ValueOfSales,
         sum(DISTINCT IF(status IN ('AS', 'AJ', 'AO'),1,0)) CountOfAbandons,
         sum(DISTINCT IF(status IN ('AS', 'AJ', 'AO'), cartvalue, 0)) ValueOfAbandons
    FROM whale
    WHERE clientid in ('tmp_clientid')
    AND sid is not null
    GROUP BY  clientid, currency, sid
    ),
    rfm_browserid AS
   (
   SELECT clientid,
     substr(sid, 14, 5) AS browserid,
     currency,
     sum(CountOfSessions) CountOfSessions,
     sum(CountOfSales) CountOfSales,
     ROUND(AVG(ValueOfSales)) AOV,
     sum(CountOfAbandons) CountOfAbandons,
     ROUND(AVG(ValueOfAbandons)) AAV
   FROM rfm_sid
   WHERE clientid in ('tmp_clientid')
   GROUP BY clientid, currency, substr(sid, 14, 5)
     ),
   rfm_lastorderdate AS
   (
   SELECT clientid,
   substr(sid, 14, 5) AS browserid,
   currency,
   max(date_format(date_start, '%Y-%m-%d')) as LastOrderDate,
   max(date_format(date_start, '%Y-%m')) as LastOrderMonth,
   concat(date_format(max(date_start), '%Y'),  '-', cast(quarter(max(date_start)) as varchar)) as OrderQuarter,
   date_diff('day', max(date_start), current_timestamp) as NrOfDaysSinceLastOrder
   FROM whale
   WHERE clientid in ('tmp_clientid')
   AND status in ('OS', 'OJ', 'OO', 'QS', 'QJ', 'QO', 'RS', 'RJ', 'RO')
   GROUP BY clientid, currency, substr(sid, 14, 5)
   ),
   rfm_lastabandondate AS
   (
   SELECT clientid,
   substr(sid, 14, 5) AS browserid,
   currency,
   max(date_format(date_start, '%Y-%m-%d')) as LastAbandonDate,
   max(date_format(date_start, '%Y-%m')) as LastAbandonMonth,
   concat(date_format(max(date_start), '%Y'), '-', cast(quarter(max(date_start)) as varchar)) as AbandonQuarter,
   date_diff('day', max(date_start), current_timestamp) as NrOfDaysSinceLastAbandon
   FROM whale
   WHERE clientid in ('tmp_clientid')
   AND status in ('AS', 'AJ', 'AO')
   GROUP BY clientid, currency, substr(sid, 14, 5)
   ),
   rfm_all AS
   (
   SELECT b.*,
   round(cast(b.CountOfAbandons as double)/cast(b.CountOfSessions as double),2) as AR,
   l.LastOrderDate, l.LastOrderMonth, l.OrderQuarter, l.NrOfDaysSinceLastOrder,
   a.LastAbandonDate, a.LastAbandonMonth, a.AbandonQuarter, a.NrOfDaysSinceLastAbandon
   FROM rfm_browserid b, rfm_lastorderdate l, rfm_lastabandondate a
   WHERE b.browserid = l.browserid and a.browserid = b.browserid
   ),
   bounce_rate_sid AS
   (
   SELECT
   clientid,
   sid,
   substr(sid, 14, 5) AS browserid,
   count(sid) AS CountOfJsons
   FROM crab_dev
   WHERE clientid in ('tmp_clientid')
   AND sid is not null
   GROUP BY clientid, substr(sid, 14, 5), sid
   ),
   bounce_rate_browserid AS
   (
   SELECT
   clientid,
   browserid,
   COUNT(CountOfJsons) AS Visits,
   COUNT(CASE WHEN CountOfJsons = 1 THEN CountOfJsons END) BRnumber
   FROM bounce_rate_sid
   WHERE clientid in ('tmp_clientid')
   GROUP BY clientid, browserid
   ),
   kpi AS
   (
   select rfm.*, br.BRnumber, br.Visits,
   round(cast(br.BRnumber as double)/cast(br.Visits as double),4) as BR,
   round(cast(rfm.CountOfSales as double)/cast(br.Visits as double),4) as CR,
   rfm.CountOfSales*rfm.AOV as CLV
   from rfm_all rfm
   INNER JOIN bounce_rate_browserid br
   ON rfm.browserid = br.browserid
   )
   select * from kpi;